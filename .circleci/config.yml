version: 2.1

# Reuasable commands and orbs

orbs:
  aws-s3: circleci/aws-s3@1.0.12

commands:
  load-env:
    steps:
      - run: # Extract environment variable as remote.env file
          name: "Load remote.env file from ENVIRONMENT variables"
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
                echo $PROD_ENV_FILE | base64 -d > remote.env

            elif [ "${CIRCLE_BRANCH}" = "develop" ]; then
                echo $DEV_ENV_FILE | base64 -d > remote.env

            elif [ "${CIRCLE_BRANCH}" = "staging" ]; then
                echo $STAGING_ENV_FILE | base64 -d > remote.env

            elif [ "${CIRCLE_BRANCH}" = "demo" ]; then
                echo $DEMO_ENV_FILE | base64 -d > remote.env

            else
                exit 1
            fi

jobs:
  deploy-api:
    machine: true
    steps:
      - run: # check that we have docker
          name: "Checking Docker Version"
          command: |
            docker -v

      - checkout # check out the code in the project directory

      - run: # test what branch we're on.
          name: "What branch am I on?"
          command: echo ${CIRCLE_BRANCH}

      - load-env

      - run: # actually deploy the api
          name: "Deploy API"
          command: docker-compose -f docker-compose.deploy.code.yml run --rm serverless-lambda-api sh deploy.sh

  deploy-client-ui:
    machine: true
    steps:
      - run: # check that we have docker
          name: "Checking Docker Version"
          command: |
            docker -v

      - checkout # check out the code in the project directory

      - run: # test what branch we're on.
          name: "What branch am I on?"
          command: echo ${CIRCLE_BRANCH}

      - load-env

      - run: # load required env variables into the machine
          name: "source env"
          command: |
            source ./remote.env
            echo "export SITE_DOMAIN=$SITE_DOMAIN" >> $BASH_ENV
            echo "export SITE_SUB_DOMAIN=$SITE_SUB_DOMAIN" >> $BASH_ENV
            echo "export AWS_REGION=$AWS_DEFAULT_REGION" >> $BASH_ENV
            echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $BASH_ENV

      - run: # Build Client UI
          name: "Build Client UI"
          command: docker-compose -f docker-compose.deploy.code.yml run --rm serverless-angular-client-ui sh -c "node build-env.js && npm run build-prod"

      - aws-s3/sync: # Deploy Client UI
          from: ./client-ui/angular-output
          to: 's3://${SITE_SUB_DOMAIN}.${SITE_DOMAIN}'
          arguments: |
            --acl public-read \
            --cache-control "max-age=60" \
            --delete
          overwrite: true


workflows:
    version: 2.1
    deploy-code:
        jobs:
          - deploy-api:
              filters:
                  branches:
                      only:
                          - master
                          # - develop
          - deploy-client-ui:
              filters:
                 branches:
                     only:
                          - master
                          # - develop
